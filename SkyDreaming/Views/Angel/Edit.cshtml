@model SkyDreaming.Models.Angel
@using SkyDreaming.Models.Enums


<h1>Edit an Angel</h1>

<form method="post" class="form-group">
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Give your name" } })
        @*<input id="name" class="form-control" type="text" name="Name" value="@(Model?.Name)" />*@
    </div>

    @Html.ValidationMessageFor(m => m.Name, " ", new { title = "boom", id = "boomer", @class = "text danger" })


    <div class="form-group">
        @Html.LabelFor(m => m.Kg)
        @Html.EditorFor(m => m.Kg, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(m => m.Kg, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(m => m.Height)
    @Html.EditorFor(m => m.Height, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
</div>

    <div class="form-group">
        @Html.LabelFor(m => m.HairColor)
        @Html.EnumDropDownListFor(m => m.HairColor, new { @class = "form-control" })
    </div>


    @*@{
            var hairColors = Enum.GetNames(typeof(HairColor));
        }

        @{
            int hairColorValue = 0;
            if (!(Model is null))
            {
                hairColorValue = (int)Model?.HairColor;
            }
        }

        <div class="form-group">
            <label for="haircolor">Hair Color</label>
            <select id="haircolor" class="form-control" name="HairColor">
                @for (int i = 0; i < hairColors.Length; i++)
                {
                    if (i == hairColorValue)
                    {
                        <option selected value="@i">@hairColors[i]</option>
                    }
                    else
                    {
                        <option value="@i">@hairColors[i]</option>
                    }

                }
            </select>
        </div>
        @Html.ValidationMessageFor(m => m.HairColor, "", new { @class = "text-danger" })*@
    <div class="form-group">
        <label for="age">Age:</label>
        <input id="age" class="form-control" type="number" name="Age" value="@(Model?.Age)" />
    </div>
    @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
    <div class="form-group">
        <label for="imageurl">Photo:</label>
        <input id="imageurl" class="form-control" type="url" name="ImageUrl" value="@(Model?.ImageUrl)" />
    </div>
    @Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger" })
    <div class="form-group">
        <input class="btn btn-primary" type="submit" value="Edit" />
        <input class="btn btn-success" type="reset" value="Clear" />
    </div>
</form>